{
  "_format": "hh3-sol-build-info-1",
  "id": "solc-0_8_28-0fe3582d5796dea884643468ba71ab354132d24c",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "userSourceNameMap": {
    "contracts/interfaces/IVerseAppRegistry.sol": "project/contracts/interfaces/IVerseAppRegistry.sol"
  },
  "input": {
    "language": "Solidity",
    "settings": {
      "evmVersion": "cancun",
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "": [
            "ast"
          ],
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ]
        }
      },
      "remappings": []
    },
    "sources": {
      "project/contracts/interfaces/IVerseAppRegistry.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/// @title IVerseAppRegistry\n/// @notice Read-only interface for VerseAppRegistry.\ninterface IVerseAppRegistry {\n    struct App {\n        string name;\n        address writer;\n        address scoreModel;\n        uint16 weightBps;   // 0..10000\n        bool active;\n    }\n\n    // Views\n    function getApp(bytes32 appId) external view returns (App memory);\n    function allAppIds() external view returns (bytes32[] memory);\n    function appConfigOf(bytes32 appId) external view returns (\n        address writer,\n        address scoreModel,\n        uint16 weightBps,\n        bool active\n    );\n    function isActive(bytes32 appId) external view returns (bool);\n    function isWriter(bytes32 appId, address candidate) external view returns (bool);\n    function computeAppScore(bytes32 appId, uint256 verseId) external view returns (uint256 rawScore, uint16 weightBps);\n}\n"
      }
    }
  }
}